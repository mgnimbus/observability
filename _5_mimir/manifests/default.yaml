nameOverride: mimir

fullnameOverride: mimir

image:
  repository: grafana/mimir
  tag: r335-39405cd
  pullPolicy: IfNotPresent

global:
  # -- Definitions to set up nginx resolver
  dnsService: kube-dns
  dnsNamespace: kube-system
  clusterDomain: cluster.local.

serviceAccount:
  create: true
  name: ${service_account_name}
  annotations:
    eks.amazonaws.com/role-arn: ${role_arn}

mimir:
  structuredConfig:
    enable_go_runtime_metrics: true
    multitenancy_enabled: true
    usage_stats:
      enabled: false
      installation_mode: helm
    blocks_storage:
      backend: s3
      bucket_store:
        sync_dir: /data/tsdb-sync
      s3:
        bucket_name: meda-dev-mackerel-mimir-chunks
        insecure: false
        endpoint: s3.us-east-1.amazonaws.com
      tsdb:
        dir: /data/tsdb
    compactor:
      data_dir: /data
    frontend:
      log_queries_longer_than: 10s
    ingester:
      instance_limits:
        max_ingestion_rate: 0
      ring:
        final_sleep: 0s
        num_tokens: 512
    ingester_client:
      grpc_client_config:
        max_recv_msg_size: 104857600
        max_send_msg_size: 104857600
    server:
      log_level: debug
      grpc_server_max_concurrent_streams: 1000
      grpc_server_max_recv_msg_size: 104857600
      grpc_server_max_send_msg_size: 104857600
    limits:
      ingestion_rate: 80000
      max_global_series_per_metric: 0
      max_global_series_per_user: 0
      max_label_names_per_series: 40
      align_queries_with_step: true
    memberlist:
      abort_if_cluster_join_fails: false
      compression_enabled: false

alertmanager:
  zoneAwareReplication:
    enabled: false
  resources:
    requests:
      cpu: 20m
  persistentVolume:
    enabled: true
    name: storage
    storageClass: obsrv-sc
    size: 10Gi
  # extraVolumes:
  #   - name: otel-ca-volume
  #     configMap:
  #       name: otel-collector-ca
  #       items:
  #         - key: ca.crt
  #           path: ca.crt
  # extraVolumeMounts:
  #   - name: otel-ca-volume
  #     mountPath: /etc/otel/certs
  #     readOnly: true

compactor:
  persistentVolume:
    enabled: true
    name: storage
    storageClass: obsrv-sc
    size: 10Gi
  resources:
    requests:
      cpu: 20m

distributor:
  resources:
    requests:
      cpu: 20m

ingester:
  replicas: 2
  persistentVolume:
    enabled: true
    name: storage
    storageClass: obsrv-sc
    size: 10Gi
  zoneAwareReplication:
    enabled: false
  resources:
    requests:
      cpu: 20m

overrides_exporter:
  resources:
    requests:
      cpu: 20m

querier:
  replicas: 1
  resources:
    requests:
      cpu: 20m

query_frontend:
  resources:
    requests:
      cpu: 20m

query_scheduler:
  replicas: 1
  resources:
    requests:
      cpu: 20m

ruler:
  resources:
    requests:
      cpu: 20m

store_gateway:
  persistentVolume:
    enabled: true
    name: storage
    storageClass: obsrv-sc
    size: 10Gi
  replicas: 2
  zoneAwareReplication:
    enabled: false
  resources:
    requests:
      cpu: 20m

rollout_operator:
  resources:
    requests:
      cpu: 20m

minio:
  enabled: false
