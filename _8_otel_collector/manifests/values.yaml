# Default values for opentelemetry-collector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# nameOverride: "cop-otel-gw"
fullnameOverride: ""

# Valid values are "daemonset", "deployment", and "statefulset".
mode: "deployment"
replicaCount: 1

# Specify which namespace should be used to deploy the resources into
namespaceOverride: ""

presets:
  logsCollection:
    enabled: false
  hostMetrics:
    enabled: false
  kubernetesAttributes:
    enabled: false
  kubeletMetrics:
    enabled: false
  kubernetesEvents:
    enabled: false
  clusterMetrics:
    enabled: false
configMap:
  create: true

config:
  extensions:
    health_check: {}
    headers_setter:
      headers:
        - action: upsert
          key: X-Scope-OrgId
          from_context: X-Scope-OrgId
  receivers:
    otlp:
      protocols:
        grpc:
          endpoint: 0.0.0.0:4317
          max_recv_msg_size_mib: 250
          include_metadata: true
        http:
          endpoint: 0.0.0.0:4318

  processors:
    batch:
      send_batch_max_size: 0
      timeout: 200ms
      send_batch_size: 8192
      metadata_keys:
        - X-Scope-OrgId
      metadata_cardinality_limit: 30
    resource:
      attributes:
        - action: insert
          key: gateway
          value: argus-otel-gateway

    attributes:
      actions:
        - key: X-Scope-OrgId
          from_context: X-Scope-OrgId
          action: upsert

    # filter/anonymous:
    #   error_mode: ignore
    #   traces:
    #     span:
    #       - attributes["X-Scope-OrgId"] == nil
    #     spanevent:
    #       - attributes["X-Scope-OrgId"] == nil
    #   metrics:
    #     datapoint:
    #       - attributes["X-Scope-OrgId"] == nil
    #   logs:
    #     log_record:
    #       - attributes["X-Scope-OrgId"] == nil

  exporters:
    # otlp:
    #   endpoint: "${tempo_endpoint}"
    #   tls:
    #     insecure: true
    #   auth:
    #     authenticator: headers_setter
    # prometheusremotewrite:
    #   endpoint: "${mimir_endpoint}"
    #   tls:
    #     insecure: true
    #   resource_to_telemetry_conversion:
    #     enabled: true # Convert resource attributes to metric labels
    #   add_metric_suffixes: true
    #   auth:
    #     authenticator: headers_setter
    otlphttp/loki:
      endpoint: "${loki_endpoint}"
      tls:
        insecure: true
      auth:
        authenticator: headers_setter

  service:
    extensions: [health_check, headers_setter]
    telemetry:
      metrics: {}
      logs: {}
    pipelines:
      metrics:
        receivers: [otlp]
        processors: [resource, attributes, batch]
        exporters: [prometheusremotewrite]
      # # traces:
      #   receivers: [otlp]
      #   processors: [resource, attributes, batch]
      #   exporters: [otlp]
      logs:
        receivers: [otlp]
        processors: [resource, attributes, batch]
        exporters: [otlphttp/loki]

image:
  repository: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib
  pullPolicy: IfNotPresent
  tag: ""
  digest: ""
imagePullSecrets: []

command:
  name: otelcol-contrib
  extraArgs: []

clusterRole:
  rules:
    - apiGroups: [""]
      resources:
        [
          "pods",
          "namespaces",
          "nodes",
          "resourcequotas",
          "replicationcontrollers",
          "services",
          "nodes/metrics",
          "nodes/stats",
          "nodes/proxy",
          "events",
        ]
      verbs: ["get", "watch", "list"]
    - apiGroups: ["apps"]
      resources: ["replicasets", "daemonsets", "deployments", "statefulsets"]
      verbs: ["get", "list", "watch"]

ports:
  otlp:
    enabled: true
    containerPort: 4317
    servicePort: 4317
    hostPort: 4317
    protocol: TCP
    appProtocol: grpc
  metrics:
    enabled: true
    containerPort: 8888
    servicePort: 8888
    protocol: TCP

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  behavior:
    minAvailable: 1
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 70

useGOMEMLIMIT: true
resources:
  requests:
    cpu: 192m
    memory: 256Mi
  limits:
    cpu: 1
    memory: 4Gi
