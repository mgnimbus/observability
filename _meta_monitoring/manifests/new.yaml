apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: ${collector_id}
  namespace: ${namespace}
spec:
  mode: daemonset
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.120.0
  serviceAccount: ${service_account}
  targetAllocator:
    enabled: true
    image: ghcr.io/open-telemetry/opentelemetry-operator/target-allocator:0.120.0
    replicas: 1
    allocationStrategy: per-node
    serviceAccount: ${service_account}
    prometheusCR:
      enabled: true
  resources:
    requests:
      cpu: 50m
      memory: 500Mi
    limits:
      cpu: 1
      memory: 5Gi
  volumes:
    - name: internal-ca-volume
      secret:
        secretName: otel-internal-ca-secret
        defaultMode: 444
  volumeMounts:
    - name: internal-ca-volume
      mountPath: /etc/otel/certs/
  env:
    - name: GOMEMLIMIT
      value: "4250MiB"
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: K8S_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: K8S_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
  config:
    receivers:
      prometheus:
        config:
          scrape_configs:
            - job_name: opentelemetry-collector
              scrape_interval: 5s
              static_configs:
                - targets:
                    - $${env:MY_POD_IP}:8888
            - job_name: kubernetes-pods
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - action: keep
                  regex: true
                  source_labels:
                    - __meta_kubernetes_pod_annotation_prometheus_io_scrape
                - action: replace
                  regex: (https?)
                  source_labels:
                    - __meta_kubernetes_pod_annotation_prometheus_io_scheme
                  target_label: __scheme__
                - action: replace
                  regex: (.+)
                  source_labels:
                    - __meta_kubernetes_pod_annotation_prometheus_io_path
                  target_label: __metrics_path__
                - action: replace
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: $1:$2
                  source_labels:
                    - __address__
                    - __meta_kubernetes_pod_annotation_prometheus_io_port
                  target_label: __address__
                - action: labelmap
                  regex: __meta_kubernetes_pod_label_(.+)
                - action: replace
                  source_labels:
                    - __meta_kubernetes_namespace
                  target_label: kubernetes_namespace
                - action: replace
                  source_labels:
                    - __meta_kubernetes_pod_name
                  target_label: kubernetes_pod_name
                - action: drop
                  regex: Pending|Succeeded|Failed
                  source_labels:
                    - __meta_kubernetes_pod_phase
    extensions:
      health_check:
      headers_setter:
        headers:
          - action: upsert
            key: X-Scope-OrgId
            from_context: X-Scope-OrgId
    processors:
      batch:
        send_batch_max_size: 1000
        timeout: 1s
        send_batch_size: 1000
      memory_limiter:
        limit_percentage: 70
        spike_limit_percentage: 30
        check_interval: 1s
      attributes:
        actions:
          - key: k8s_cluster_id
            value: ${eks_cluster}
            action: insert
          - key: otel_collector_id
            action: insert
            value: ${collector_id}
    exporters:
      debug: {}
      otlp:
        endpoint: "https://otel.gowthamvandana.com:443"
        tls:
          insecure: false
          insecure_skip_verify: true
          # ca_file: /etc/otel/certs/ca.crt
        headers:
          X-Scope-OrgId: obsrv
        compression: snappy
    service:
      extensions: [health_check, headers_setter]
      telemetry:
        {}
        # metrics:
        #   address: 0.0.0.0:8888
      pipelines:
        metrics:
          receivers: [prometheus]
          exporters: [debug, otlp]
          processors: [memory_limiter, attributes, batch]
        logs: null
        traces: null
